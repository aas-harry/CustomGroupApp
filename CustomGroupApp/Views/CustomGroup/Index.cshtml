<div id="window-popup"></div>
<div class="container-fluid">
    <style scoped="">
          .k-grid td {
            padding-bottom: 2px;
            padding-top: 2px;
            white-space: nowrap;
            text-overflow: ellipsis;
        }
    </style>
    <div id="content">
        <div class="row">
            <input id="test-number" style="width: 280px; margin-right: 5px; margin-left: 10px">
            <button class="btn btn-default" onClick="createClasses()">Create</button>
            <button class="btn btn-default" onClick="testControl()">Test</button>
            @*<button class="btn btn-default" onClick="getResults()">Get Results</button>
            <button class="btn btn-default" onClick="createMixClasses()">Create Mix</button>
            <button class="btn btn-default" onClick="createStreamingClasses()">Create streaming</button>
            <button class="btn btn-default" onClick="createBandingClasses()">Create Banding</button>
            <button class="btn btn-default" onclick="createTopMidBottomClasses()">Create TMB</button>
            <input type="checkbox" id="mixBoysGirls" value="0" style="margin-right: 10px; margin-left: 10px" onclick="changeMixBoysGirls(this)" />Mix Boys and Girls*@
            <div id="message-text"></div>
        </div>
      
        <div class="row" style="margin-bottom: 20px">
            <div id="test-container">
                <table>
                    <tr>
                        <td style="width: 500px" id="joined-student-list"></td>
                    </tr>
                    <tr>
                        <td style="width: 500px" id="separated-student-list"></td>
                    </tr>
                </table>
            </div>
            <div id="student-list"></div>
        </div>
    </div>
</div>
<script>
    var testFile = new TestFile();
    var mixBoysGirls = false;
    var detailCols = [
        { label: 'Name', name: 'name', width: 200 },
        { label: 'Sex', name: 'gender', width: 50 },
        { label: 'Score', name: 'score', width: 80 },
        { label: 'Class', name: 'classNo', width: 80 },
        {
            label: 'Flag',
            name: 'canMoveToOtherClass',
            width: 80,
            formatter: formatColor
        }
    ];
    var summaryCols = [
        { label: 'Class', name: 'index', width: 150 },
        { label: 'Count', name: 'count', width: 50 },
        { label: 'Average', name: 'average', width: 150, formatter: 'number', formatoptions: { decimalPlaces: 2 } },
        { label: 'Boys', name: 'boysCount', width: 50 },
        {
            label: 'Boys Average',
            name: 'boysAverage',
            width: 150,
            formatter: 'number',
            formatoptions: { decimalPlaces: 2 }
        },
        { label: 'Girls', name: 'girlsCount', width: 50 },
        {
            label: 'Girls Average',
            name: 'girlsAverage',
            width: 150,
            formatter: 'number',
            formatoptions: { decimalPlaces: 2 }
        }
    ];

    $(document)
        .ready(function () {
            $("#test-number").kendoComboBox({
                dataTextField: "text",
                dataValueField: "value",
                dataSource: [
                    { text: "Abbotsleigh", value: 1014270 },
                    { text: "Casimir Catholic College", value: 1015246 },
                    { text: " Cranbrook School", value: 1014218 },
                { text: " Marcellin Burlene", value: 1014181 } // 1014181
                ],
                index: 0
            });
        });

    function getResults() {
        $.ajax({
            url: '@Url.Action("GetResults", "CustomGroup")',
            data: { testnum: 1014181 },
            type: 'POST',
            cache: false,
            success: function (data) {
                testFile.clear();
                testFile.set(data.Test, data.Results);

                $("#message-text").replaceWith("Test file with " + data.Results.length);
            },
            fail: function (data) {

            }
        });
    }

    function testControl() {
 
        var numericTextBox = $("#test-number").data("kendoComboBox");
        var testnumber = parseInt(numericTextBox.value());

        $.ajax({
            url: '@Url.Action("GetResults", "CustomGroup")',
            data: { testnum: testnumber },
            type: 'POST',
            cache: false,
            success: function (data) {
                testFile.clear();
                testFile.set(data.Test, data.Results);

                $("#message-text").replaceWith("Test file with " + testFile.students.length);

                var control = new StudentSelector(20);
                control.openDialog(document.getElementById("window-popup"), testFile.students, Enumerable.From(testFile.students).Take(5).ToArray());
                // control.createTable(document.getElementById("student-list"), testFile.students);

            },
            fail: function (data) {

            }
        });
    }
    function createClasses() {
        var numericTextBox = $("#test-number").data("kendoComboBox");
        var testnumber = parseInt(numericTextBox.value());

        $.ajax({
            url: '@Url.Action("CustomGroupWizard", "CustomGroup")',
            data: { testnum: testnumber },  // 1014181
            type: 'POST',
            cache: false,
            success: function (html) {
                $("#content").replaceWith(html);
            },
            fail: function (data) {

            }
        });
    }

 
    function resetGrid() {
        for (var j = 1; j <= 6; j++) {
            $("#jqgrid" + j + "-container").html("<table id='jqGrid" + j + "'></table>");
        }
        $("#summary-container").html("<table id='summary-grid'></table>");
    }

    function createMixClasses() {
        var classesDefn = new ClassesDefinition(testFile);
        var bandSet = classesDefn.createBandSet("class",
            classesDefn.studentCount,
            1,
            BandStreamType.Streaming,
            BandType.None,
            StreamType.OverallAbilty,
            GroupingMethod.MixedAbility,
            mixBoysGirls);

        var band = bandSet.bands[0];
        band.setClassCount(5);
        //band.classes[0].count += 5;
        //band.classes[1].count -= 3;
        //band.classes[2].count -= 2;

        var separatedStudents = [
            createStudentSet(classesDefn.students, ["CHELLIAH Aaron", "LOH Gareth"]),
            createStudentSet(classesDefn.students, ["WRIGHT Andrew", "MURRAY Jye"]),
            createStudentSet(classesDefn.students, ["DIXON Alexander", "ATTEYA Chloe"])
        ];
        var joinedStudents = [
            createStudentSet(classesDefn.students, ["DANG Nathan", "NEWTON Sam"]),
            createStudentSet(classesDefn.students, ["THOMAS Sarah", "BASTIAN Mia", "NOGAJSKI Nicholas"]), // class 3
            createStudentSet(classesDefn.students, ["WILTON Simon", "DONA Elise", "MUNTER Hayden"])
        ];

        bandSet.prepare("Mix", classesDefn.students, joinedStudents, separatedStudents);

        var classlist = new CustomClassGridCollection();

        classlist.initTable("#class-container", bandSet.bands);
        //resetGrid();

        //var classes = band.classes;
        //for (var i = 1; i <= classes.length; i++) {

        //    $("#jqGrid" + i)
        //        .jqGrid({
        //            datatype: "local",
        //            data: classes[i - 1].students,
        //            height: 350,
        //            colModel: detailCols,
        //            viewrecords: true, // show the current page, data rang and total records on the toolbar
        //            caption: classes[i - 1].name
        //        });
        //}

        //$("#summary-grid")
        //        .jqGrid({
        //            datatype: "local",
        //            data: band.classes,
        //            colModel: summaryCols,
        //            viewrecords: true, // show the current page, data rang and total records on the toolbar
        //            caption: "Group Summary"
        //        });
    }


    function createStreamingClasses() {
        var classesDefn = new ClassesDefinition(testFile);
        var bandSet = classesDefn.createBandSet("class",
            classesDefn.studentCount,
            1,
            BandStreamType.Streaming,
            BandType.None,
            StreamType.OverallAbilty,
            GroupingMethod.Streaming, mixBoysGirls);
        var band = bandSet.bands[0];
        band.streamType = StreamType.OverallAbilty;

        band.setClassCount(5);
        //band.classes[0].count += 5;
        //band.classes[1].count -= 3;
        //band.classes[2].count -= 2;

        var separatedStudents = [
            createStudentSet(classesDefn.students, ["CHELLIAH Aaron", "LOH Gareth"]),
            createStudentSet(classesDefn.students, ["WRIGHT Andrew", "MURRAY Jye"]),
            createStudentSet(classesDefn.students, ["DIXON Alexander", "ATTEYA Chloe"])
        ];
        var joinedStudents = [
            createStudentSet(classesDefn.students, ["DANG Nathan", "NEWTON Sam"]),
            createStudentSet(classesDefn.students, ["THOMAS Sarah", "BASTIAN Mia", "NOGAJSKI Nicholas"]), // class 3
            createStudentSet(classesDefn.students, ["WILTON Simon", "DONA Elise", "MUNTER Hayden"])
        ];

        //    bandSet.prepare("Maths", classesDefn.students, joinedStudents, separatedStudents);
        bandSet.prepare("Maths", classesDefn.students, joinedStudents, separatedStudents);

        var classes = band.classes;

        resetGrid();


        for (var i = 1; i <= classes.length; i++) {

            $("#jqGrid" + i)
                .jqGrid({
                    datatype: "local",
                    data: classes[i - 1].students,
                    height: 350,
                    colModel: detailCols,
                    viewrecords: true, // show the current page, data rang and total records on the toolbar
                    caption: classes[i - 1].name
                });
        }

        $("#summary-grid")
            .jqGrid({
                datatype: "local",
                data: classes,
                colModel: summaryCols,
                viewrecords: true, // show the current page, data rang and total records on the toolbar
                caption: "Group Summary"
            });
    }

    function formatColor(cellValue, options, rowObject) {
        var color = (cellValue) ? "green" : "red";
        var cellHtml = "<span style='color:" +
            color +
            "' originalValue='" +
            cellValue +
            "'>" +
            cellValue +
            "</span>";

        return cellHtml;
    }


    function getSeparatedStudents(classes) {
        var studentSet1 = new StudentSet();
        studentSet1.students.push(classes.students[0]);
        studentSet1.students.push(classes.students[5]);
        studentSet1.students.push(classes.students[8]);

        var studentSet2 = new StudentSet();
        studentSet2.students.push(classes.students[9]);
        studentSet2.students.push(classes.students[15]);
        studentSet2.students.push(classes.students[18]);

        return [studentSet1, studentSet2];
    }

    function findStudent(students, name) {
        for (var i = 0; i < students.length; i++) {
            if (students[i].name === name) {
                return students[i];
            }
        }
        return null;
    }

    function createStudentSet(students, names) {
        var studentSet = new StudentSet();
        for (var i = 0; i < names.length; i++) {
            var student1 = findStudent(students, names[i]);
            if (student1) {
                studentSet.students.push(student1);
            }
        }
        return studentSet;
    }

    function createBandingClasses() {
        var classesDefn = new ClassesDefinition(testFile);
        // Create two bands
        var bandSet = classesDefn.createBandSet("band",
            classesDefn.studentCount,
            2,
            BandType.Custom,
            BandStreamType.Streaming,
            StreamType.OverallAbilty,
            GroupingMethod.MixedAbility, mixBoysGirls);
        bandSet.bands[0].setClassCount(3);
        bandSet.bands[1].setClassCount(3);

        var separatedStudents = [
            createStudentSet(classesDefn.students, ["CHELLIAH Aaron", "LOH Gareth"]),
            createStudentSet(classesDefn.students, ["WRIGHT Andrew", "MURRAY Jye"]),
            createStudentSet(classesDefn.students, ["DIXON Alexander", "ATTEYA Chloe"])
        ];
        var joinedStudents = [
            createStudentSet(classesDefn.students, ["DANG Nathan", "NEWTON Sam"]),
            createStudentSet(classesDefn.students, ["THOMAS Sarah", "BASTIAN Mia", "NOGAJSKI Nicholas"]), // class 3
            createStudentSet(classesDefn.students, ["WILTON Simon", "DONA Elise", "MUNTER Hayden"])
        ];

        bandSet.prepare("Band", classesDefn.students, joinedStudents, separatedStudents);
        var tmpClasses = bandSet.bands[0].classes.concat(bandSet.bands[1].classes);

        resetGrid();

        for (var i = 1; i <= tmpClasses.length; i++) {

            $("#jqGrid" + i)
                .jqGrid({
                    datatype: "local",
                    data: tmpClasses[i - 1].students,
                    height: 350,
                    colModel: detailCols,
                    viewrecords: true, // show the current page, data rang and total records on the toolbar
                    caption: tmpClasses[i - 1].name
                });
        }

        $("#summary-grid")
            .jqGrid({
                datatype: "local",
                data: tmpClasses,
                colModel: summaryCols,
                viewrecords: true, // show the current page, data rang and total records on the toolbar
                caption: "Group Summary"
            });
    }

    function createTopMidBottomClasses() {
        var classesDefn = new ClassesDefinition(testFile);
        // Create two bands
        var bandSet = classesDefn.createTopMiddleBottomBandSet("band",
            classesDefn.studentCount,
            BandType.Custom,
            BandStreamType.Streaming,
            StreamType.OverallAbilty,
            GroupingMethod.MixedAbility, mixBoysGirls);
        bandSet.bands[0].setClassCount(3);
        bandSet.bands[1].setClassCount(2);
        bandSet.bands[2].setClassCount(1);

        var separatedStudents = [
            createStudentSet(classesDefn.students, ["CHELLIAH Aaron", "LOH Gareth"]),
            createStudentSet(classesDefn.students, ["WRIGHT Andrew", "MURRAY Jye"]),
            createStudentSet(classesDefn.students, ["DIXON Alexander", "ATTEYA Chloe"])
        ];
        var joinedStudents = [
            createStudentSet(classesDefn.students, ["DANG Nathan", "NEWTON Sam"]),
            createStudentSet(classesDefn.students, ["THOMAS Sarah", "BASTIAN Mia", "NOGAJSKI Nicholas"]), // class 3
            createStudentSet(classesDefn.students, ["WILTON Simon", "DONA Elise", "MUNTER Hayden"])
        ];

        bandSet.prepare("Band", classesDefn.students, joinedStudents, separatedStudents);
        var tmpClasses = bandSet.bands[0].classes.concat(bandSet.bands[1].classes).concat(bandSet.bands[2].classes);
        resetGrid();


        for (var i = 1; i <= tmpClasses.length; i++) {

            $("#jqGrid" + i)
                .jqGrid({
                    datatype: "local",
                    data: tmpClasses[i - 1].students,
                    height: 350,
                    colModel: detailCols,
                    viewrecords: true, // show the current page, data rang and total records on the toolbar
                    caption: tmpClasses[i - 1].name
                });
        }

        //for (var j = classes.singleBand.classes.length + 1; j <= 6; j++) {
        //    $("#jqGrid" + j).html("");
        //}


        $("#summary-grid")
            .jqGrid({
                datatype: "local",
                data: tmpClasses,
                colModel: summaryCols,
                viewrecords: true, // show the current page, data rang and total records on the toolbar
                caption: "Group Summary"
            });
    }
</script>