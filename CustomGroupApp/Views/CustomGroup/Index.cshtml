<div class="container-fluid">
    <div class="row">
        <button class="btn-default" onClick="getResults()">Get Results</button>
        <button class="btn-default" onClick="createMixClasses()">Create Mix</button>
        <button class="btn-default" onClick="createStreamingClasses()">Create streaming</button>
        <button class="btn-default" onClick="createBandingClasses()">Create Banding</button>
        <button class="btn-default" onclick="createTopMidBottomClasses()">Create TMB</button>
        <div id="message-text"></div>
    </div>

    <div class="row" style="margin-bottom: 30px">
        <div class="col-md-4" id="jqgrid1-container">
            <table id="jqGrid1"></table>
        </div>
        <div class="col-md-4" id="jqgrid2-container">
            <table id="jqGrid2"></table>
        </div>
        <div class="col-md-4" id="jqgrid3-container">
            <table id="jqGrid3"></table>
        </div>
    </div>

    <div class="row" style="margin-bottom: 30px">
        <div class="col-md-4" id="jqgrid4-container">
            <table id="jqGrid4"></table>
        </div>
        <div class="col-md-4" id="jqgrid5-container">
            <table id="jqGrid5"></table>
        </div>
        <div class="col-md-4" id="jqgrid6-container">
            <table id="jqGrid6"></table>
        </div>
    </div>
    <div class="row" style="margin-bottom: 30px">
        <div class="col-md-4" id="summary-container">
            <table id="summary-grid"></table>
        </div>
    </div>
</div>
<script>
    var testFile = new TestFile();
    $(document)
        .ready(function() {

        });

    function getResults() {
        $.ajax({
            url: '@Url.Action("GetResults", "CustomGroup")',
            data: { testnum: 1014405 },
            type: 'POST',
            cache: false,
            success: function(data) {
                testFile.clear();
                testFile.fileNumber = data.Test.Testnum;
                testFile.grade = data.Test.Grade;
                testFile.category = data.Test.Category;
                testFile.testDate = data.Test.Testdate;
                testFile.setStudents(data.Results);

                $("#message-text").replaceWith("Test file with " + data.Results.length);
            },
            fail: function(data) {

            }
        });
    }

    function createMixClasses() {
        var classesDefn = new ClassesDefinition(testFile);
        var bandSet = classesDefn.createBandSet("class",
            classesDefn.studentCount,
            1,
            BandStreamType.Streaming,
            BandType.None,
            StreamType.OverallAbilty,
            GroupingMethod.MixedAbility);

        var band = bandSet.bands[0];
        band.setClassCount(5);
        //band.classes[0].count += 5;
        //band.classes[1].count -= 3;
        //band.classes[2].count -= 2;

        var separatedStudents = getSeparatedStudents(classesDefn);
        bandSet.prepare("Mix", classesDefn.students, null, separatedStudents);

        var classes = band.classes;
        for (var i = 1; i <= classes.length; i++) {

            $("#jqGrid" + i)
                .jqGrid({
                    datatype: "local",
                    data: classes[i - 1].students,
                    height: 350,
                    colModel: [
                        { label: 'Name', name: 'name', width: 200 },
                        { label: 'Sex', name: 'gender', width: 50 },
                        { label: 'Score', name: 'score', width: 80 },
                        { label: 'Class', name: 'classNo', width: 80 }
                    ],
                    viewrecords: true, // show the current page, data rang and total records on the toolbar
                    caption: classes[i - 1].name
                });
        }
        for (var j = classes.length + 1; j <= 6; j++) {

            $("#jqGrid" + j).replaceWith("");
        }


        $("#summary-grid")
            .jqGrid({
                datatype: "local",
                data: band.classes,
                colModel: [
                    { label: 'Class', name: 'index', width: 150 },
                    { label: 'Count', name: 'count', width: 50 },
                    { label: 'Average', name: 'average', width: 50 }
                ],
                viewrecords: true, // show the current page, data rang and total records on the toolbar
                caption: "Group Summary"
            });
    }

    function createStreamingClasses() {
        var classesDefn = new ClassesDefinition(testFile);
        var bandSet = classesDefn.createBandSet("class",
            classesDefn.studentCount,
            1,
            BandStreamType.Streaming,
            BandType.None,
            StreamType.OverallAbilty,
            GroupingMethod.Streaming);
        var band = bandSet.bands[0];
        band.streamType = StreamType.OverallAbilty;

        band.setClassCount(5);
        //band.classes[0].count += 5;
        //band.classes[1].count -= 3;
        //band.classes[2].count -= 2;

        var separatedStudents = []; //getSeparatedStudents(classesDefn);
        debugger;
        bandSet.prepare("Maths", classesDefn.students, null, separatedStudents);
        var classes = band.classes;

        for (var i = 1; i <= classes.length; i++) {

            $("#jqGrid" + i)
                .jqGrid({
                    datatype: "local",
                    data: classes[i - 1].students,
                    height: 350,
                    colModel: [
                        { label: 'Name', name: 'name', width: 200 },
                        { label: 'Sex', name: 'gender', width: 50 },
                        { label: 'Score', name: 'score', width: 80 },
                        { label: 'Class', name: 'classNo', width: 80 }
                    ],
                    viewrecords: true, // show the current page, data rang and total records on the toolbar
                    caption: classes[i - 1].name
                });
        }
        for (var j = classes.length + 1; j <= 6; j++) {

            $("#jqGrid" + j).replaceWith("");
        }

        $("#summary-grid")
            .jqGrid({
                datatype: "local",
                data: classes,
                colModel: [
                    { label: 'Class', name: 'index', width: 150 },
                    { label: 'Count', name: 'count', width: 50 },
                    { label: 'Average', name: 'average', width: 50 }
                ],
                viewrecords: true, // show the current page, data rang and total records on the toolbar
                caption: "Group Summary"
            });
    }

    function getSeparatedStudents(classes) {
        var studentSet1 = new StudentSet();
        studentSet1.students.push(classes.students[0]);
        studentSet1.students.push(classes.students[5]);
        studentSet1.students.push(classes.students[8]);

        var studentSet2 = new StudentSet();
        studentSet2.students.push(classes.students[9]);
        studentSet2.students.push(classes.students[15]);
        studentSet2.students.push(classes.students[18]);

        return [studentSet1, studentSet2];
    }

    function createBandingClasses() {
        var classDefn = new ClassesDefinition(testFile);
        // Create two bands
        var bandSet = classDefn.createBandSet("band",
            classDefn.studentCount,
            2,
            BandType.Custom,
            BandStreamType.Streaming,
            StreamType.OverallAbilty,
            GroupingMethod.MixedAbility);
        bandSet.bands[0].setClassCount(3);
        bandSet.bands[1].setClassCount(3);

        var separatedStudents = getSeparatedStudents(classDefn);
        bandSet.prepare("Band", classDefn.students, null, separatedStudents);
        var tmpClasses = bandSet.bands[0].classes.concat(bandSet.bands[1].classes);
        for (var i = 1; i <= tmpClasses.length; i++) {

            $("#jqGrid" + i)
                .jqGrid({
                    datatype: "local",
                    data: tmpClasses[i - 1].students,
                    height: 350,
                    colModel: [
                        { label: 'Name', name: 'name', width: 200 },
                        { label: 'Sex', name: 'gender', width: 50 },
                        { label: 'Score', name: 'score', width: 80 },
                        { label: 'Class', name: 'classNo', width: 80 }
                    ],
                    viewrecords: true, // show the current page, data rang and total records on the toolbar
                    caption: tmpClasses[i - 1].name
                });
        }

        //for (var j = classes.singleBand.classes.length + 1; j <= 6; j++) {
        //    $("#jqGrid" + j).replaceWith("");
        //}

        $("#summary-grid")
            .jqGrid({
                datatype: "local",
                data: tmpClasses,
                colModel: [
                    { label: 'Class', name: 'index', width: 150 },
                    { label: 'Count', name: 'count', width: 50 },
                    { label: 'Average', name: 'average', width: 50 }
                ],
                viewrecords: true, // show the current page, data rang and total records on the toolbar
                caption: "Group Summary"
            });
    }

    function createTopMidBottomClasses() {
        var classes = new ClassesDefinition(testFile);
        // Create two bands
        debugger;
        var bandSet = classes.createTopMiddleBottomBandSet("band",
            classes.studentCount,
            BandType.Custom,
            BandStreamType.Streaming,
            StreamType.OverallAbilty,
            GroupingMethod.MixedAbility);
        bandSet.bands[0].setClassCount(3);
        bandSet.bands[1].setClassCount(2);
        bandSet.bands[2].setClassCount(1);
        bandSet.prepare("Band", classes.students);
        var tmpClasses = bandSet.bands[0].classes.concat(bandSet.bands[1].classes).concat(bandSet.bands[2].classes);
        for (var i = 1; i <= tmpClasses.length; i++) {

            $("#jqGrid" + i)
                .jqGrid({
                    datatype: "local",
                    data: tmpClasses[i - 1].students,
                    height: 350,
                    colModel: [
                        { label: 'Name', name: 'name', width: 200 },
                        { label: 'Sex', name: 'gender', width: 50 },
                        { label: 'Score', name: 'score', width: 80 },
                        { label: 'Class', name: 'classNo', width: 80 }
                    ],
                    viewrecords: true, // show the current page, data rang and total records on the toolbar
                    caption: tmpClasses[i - 1].name
                });
        }

        //for (var j = classes.singleBand.classes.length + 1; j <= 6; j++) {
        //    $("#jqGrid" + j).replaceWith("");
        //}


        $("#summary-grid")
            .jqGrid({
                datatype: "local",
                data: tmpClasses,
                colModel: [
                    { label: 'Class', name: 'index', width: 150 },
                    { label: 'Count', name: 'count', width: 50 },
                    { label: 'Average', name: 'average', width: 50 }
                ],
                viewrecords: true, // show the current page, data rang and total records on the toolbar
                caption: "Group Summary"
            });
    }
</script>